// <auto-generated />
using DataCollection.Data.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataCollection.Migrations
{
    [DbContext(typeof(DataCollectionDbContext))]
    partial class DataCollectionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataCollection.Entities.Symbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseCurrency")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(25)");

                    b.Property<double>("DepositMinimum")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("ExchangeListed")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExchangeTraded")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double>("MinMovement")
                        .HasColumnType("double precision");

                    b.Property<long>("PriceScale")
                        .HasColumnType("bigint");

                    b.Property<string>("SessionRegular")
                        .HasColumnType("text");

                    b.Property<string>("SymbolName")
                        .HasColumnType("text");

                    b.Property<string>("Timezone")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<double>("WithdrawMinimum")
                        .HasColumnType("double precision");

                    b.Property<double>("WithdrawalFee")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Symbols");
                });
#pragma warning restore 612, 618
        }
    }
}
